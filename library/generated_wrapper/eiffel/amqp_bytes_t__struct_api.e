note

	description: "This file has been generated by WrapC. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class AMQP_BYTES_T__STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	len: NATURAL
			-- Access member `len`
		require
			exists: exists
		do
			Result := c_len (item)
		ensure
			result_correct: Result = c_len (item)
		end

	set_len (a_value: NATURAL) 
			-- Change the value of member `len` to `a_value`.
		require
			exists: exists
		do
			set_c_len (item, a_value)
		ensure
			len_set: a_value = len
		end

	bytes: POINTER
			-- Access member `bytes`
		require
			exists: exists
		do
			Result := c_bytes (item)
		ensure
			result_correct: Result = c_bytes (item)
		end

	set_bytes (a_value: POINTER) 
			-- Change the value of member `bytes` to `a_value`.
		require
			exists: exists
		do
			set_c_bytes (item, a_value)
		ensure
			bytes_set: a_value = bytes
		end

feature {NONE} -- Implementation wrapper for struct struct amqp_bytes_t_

	sizeof_external: INTEGER 
		external
			"C inline use <amqp.h>"
		alias
			"sizeof(struct amqp_bytes_t_)"
		end

	c_len (an_item: POINTER): NATURAL
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <amqp.h>"
		alias
			"[
				((struct amqp_bytes_t_*)$an_item)->len
			]"
		end

	set_c_len (an_item: POINTER; a_value: NATURAL) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <amqp.h>"
		alias
			"[
				((struct amqp_bytes_t_*)$an_item)->len =  (size_t)$a_value
			]"
		ensure
			len_set: a_value = c_len (an_item)
		end

	c_bytes (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <amqp.h>"
		alias
			"[
				((struct amqp_bytes_t_*)$an_item)->bytes
			]"
		end

	set_c_bytes (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <amqp.h>"
		alias
			"[
				((struct amqp_bytes_t_*)$an_item)->bytes =  (void*)$a_value
			]"
		ensure
			bytes_set: a_value = c_bytes (an_item)
		end

end
