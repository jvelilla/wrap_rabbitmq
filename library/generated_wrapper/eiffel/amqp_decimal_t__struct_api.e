note

	description: "This file has been generated by WrapC. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class AMQP_DECIMAL_T__STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	decimals: CHARACTER
			-- Access member `decimals`
		require
			exists: exists
		do
			Result := c_decimals (item)
		ensure
			result_correct: Result = c_decimals (item)
		end

	set_decimals (a_value: CHARACTER) 
			-- Change the value of member `decimals` to `a_value`.
		require
			exists: exists
		do
			set_c_decimals (item, a_value)
		ensure
			decimals_set: a_value = decimals
		end

	value: NATURAL
			-- Access member `value`
		require
			exists: exists
		do
			Result := c_value (item)
		ensure
			result_correct: Result = c_value (item)
		end

	set_value (a_value: NATURAL) 
			-- Change the value of member `value` to `a_value`.
		require
			exists: exists
		do
			set_c_value (item, a_value)
		ensure
			value_set: a_value = value
		end

feature {NONE} -- Implementation wrapper for struct struct amqp_decimal_t_

	sizeof_external: INTEGER 
		external
			"C inline use <amqp.h>"
		alias
			"sizeof(struct amqp_decimal_t_)"
		end

	c_decimals (an_item: POINTER): CHARACTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <amqp.h>"
		alias
			"[
				((struct amqp_decimal_t_*)$an_item)->decimals
			]"
		end

	set_c_decimals (an_item: POINTER; a_value: CHARACTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <amqp.h>"
		alias
			"[
				((struct amqp_decimal_t_*)$an_item)->decimals =  (uint8_t)$a_value
			]"
		ensure
			decimals_set: a_value = c_decimals (an_item)
		end

	c_value (an_item: POINTER): NATURAL
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <amqp.h>"
		alias
			"[
				((struct amqp_decimal_t_*)$an_item)->value
			]"
		end

	set_c_value (an_item: POINTER; a_value: NATURAL) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <amqp.h>"
		alias
			"[
				((struct amqp_decimal_t_*)$an_item)->value =  (uint32_t)$a_value
			]"
		ensure
			value_set: a_value = c_value (an_item)
		end

end
