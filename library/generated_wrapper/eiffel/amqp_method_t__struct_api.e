note

	description: "This file has been generated by WrapC. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class AMQP_METHOD_T__STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	id: NATURAL
			-- Access member `id`
		require
			exists: exists
		do
			Result := c_id (item)
		ensure
			result_correct: Result = c_id (item)
		end

	set_id (a_value: NATURAL) 
			-- Change the value of member `id` to `a_value`.
		require
			exists: exists
		do
			set_c_id (item, a_value)
		ensure
			id_set: a_value = id
		end

	decoded: POINTER
			-- Access member `decoded`
		require
			exists: exists
		do
			Result := c_decoded (item)
		ensure
			result_correct: Result = c_decoded (item)
		end

	set_decoded (a_value: POINTER) 
			-- Change the value of member `decoded` to `a_value`.
		require
			exists: exists
		do
			set_c_decoded (item, a_value)
		ensure
			decoded_set: a_value = decoded
		end

feature {NONE} -- Implementation wrapper for struct struct amqp_method_t_

	sizeof_external: INTEGER 
		external
			"C inline use <amqp.h>"
		alias
			"sizeof(struct amqp_method_t_)"
		end

	c_id (an_item: POINTER): NATURAL
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <amqp.h>"
		alias
			"[
				((struct amqp_method_t_*)$an_item)->id
			]"
		end

	set_c_id (an_item: POINTER; a_value: NATURAL) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <amqp.h>"
		alias
			"[
				((struct amqp_method_t_*)$an_item)->id =  (amqp_method_number_t)$a_value
			]"
		ensure
			id_set: a_value = c_id (an_item)
		end

	c_decoded (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <amqp.h>"
		alias
			"[
				((struct amqp_method_t_*)$an_item)->decoded
			]"
		end

	set_c_decoded (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <amqp.h>"
		alias
			"[
				((struct amqp_method_t_*)$an_item)->decoded =  (void*)$a_value
			]"
		ensure
			decoded_set: a_value = c_decoded (an_item)
		end

end
