note

	description: "This file has been generated by WrapC. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class AMQP_POOL_BLOCKLIST_T__STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	num_blocks: INTEGER
			-- Access member `num_blocks`
		require
			exists: exists
		do
			Result := c_num_blocks (item)
		ensure
			result_correct: Result = c_num_blocks (item)
		end

	set_num_blocks (a_value: INTEGER) 
			-- Change the value of member `num_blocks` to `a_value`.
		require
			exists: exists
		do
			set_c_num_blocks (item, a_value)
		ensure
			num_blocks_set: a_value = num_blocks
		end

	blocklist: POINTER
			-- Access member `blocklist`
		require
			exists: exists
		do
			Result := c_blocklist (item)
		ensure
			result_correct: Result = c_blocklist (item)
		end

	set_blocklist (a_value: POINTER) 
			-- Change the value of member `blocklist` to `a_value`.
		require
			exists: exists
		do
			set_c_blocklist (item, a_value)
		ensure
			blocklist_set: a_value = blocklist
		end

feature {NONE} -- Implementation wrapper for struct struct amqp_pool_blocklist_t_

	sizeof_external: INTEGER 
		external
			"C inline use <amqp.h>"
		alias
			"sizeof(struct amqp_pool_blocklist_t_)"
		end

	c_num_blocks (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <amqp.h>"
		alias
			"[
				((struct amqp_pool_blocklist_t_*)$an_item)->num_blocks
			]"
		end

	set_c_num_blocks (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <amqp.h>"
		alias
			"[
				((struct amqp_pool_blocklist_t_*)$an_item)->num_blocks =  (int)$a_value
			]"
		ensure
			num_blocks_set: a_value = c_num_blocks (an_item)
		end

	c_blocklist (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <amqp.h>"
		alias
			"[
				((struct amqp_pool_blocklist_t_*)$an_item)->blocklist
			]"
		end

	set_c_blocklist (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <amqp.h>"
		alias
			"[
				((struct amqp_pool_blocklist_t_*)$an_item)->blocklist =  (void**)$a_value
			]"
		ensure
			blocklist_set: a_value = c_blocklist (an_item)
		end

end
